apiVersion: v1
kind: Pod
metadata:
    annotations: {}
    name: debug-git-sync-binary
    namespace: test-backup
spec:
    containers:
        - args:
            - -c
            - echo 'Testing git-sync binary:'; echo 'Binary location:'; which git-sync; echo 'Binary info:'; ls -la /usr/local/bin/git-sync; echo 'Testing health check:'; /usr/local/bin/git-sync --health-check; echo 'Environment:'; env | grep -E '(WORK|MINIO|GIT)'; sleep 600
          command:
            - /bin/sh
          env:
            - name: WORK_DIR
              valueFrom:
                secretKeyRef:
                    key: work-dir
                    name: git-sync-secrets
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                    key: minio-endpoint
                    name: git-sync-secrets
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                    key: minio-access-key
                    name: git-sync-secrets
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                    key: minio-secret-key
                    name: git-sync-secrets
            - name: MINIO_BUCKET
              valueFrom:
                secretKeyRef:
                    key: minio-bucket
                    name: git-sync-secrets
            - name: MINIO_USE_SSL
              valueFrom:
                secretKeyRef:
                    key: minio-use-ssl
                    name: git-sync-secrets
            - name: GIT_REPOSITORY
              valueFrom:
                secretKeyRef:
                    key: git-repository
                    name: git-sync-secrets
            - name: GIT_BRANCH
              valueFrom:
                secretKeyRef:
                    key: git-branch
                    name: git-sync-secrets
            - name: GIT_USERNAME
              valueFrom:
                secretKeyRef:
                    key: git-username
                    name: git-sync-secrets
            - name: GIT_EMAIL
              valueFrom:
                secretKeyRef:
                    key: git-email
                    name: git-sync-secrets
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                    key: git-token
                    name: git-sync-secrets
            - name: RETRY_ATTEMPTS
              valueFrom:
                secretKeyRef:
                    key: retry-attempts
                    name: git-sync-secrets
            - name: RETRY_DELAY
              valueFrom:
                secretKeyRef:
                    key: retry-delay
                    name: git-sync-secrets
          image: git-sync:alpine-production
          imagePullPolicy: IfNotPresent
          name: debug
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /workspace
              name: workspace
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-q77z6
              readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
    serviceAccount: cluster-backup
    serviceAccountName: cluster-backup
    terminationGracePeriodSeconds: 30
    tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
    volumes:
        - emptyDir: {}
          name: workspace
        - name: kube-api-access-q77z6
          projected:
            defaultMode: 420
            sources:
                - serviceAccountToken:
                    expirationSeconds: 3607
                    path: token
                - configMap:
                    items:
                        - key: ca.crt
                          path: ca.crt
                    name: kube-root-ca.crt
                - downwardAPI:
                    items:
                        - fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                          path: namespace
