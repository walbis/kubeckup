apiVersion: v1
kind: Pod
metadata:
    generateName: minio-connection-test-
    labels:
        batch.kubernetes.io/controller-uid: f44c1c03-d7d0-4070-b1ac-cbe1d5df7cfb
        batch.kubernetes.io/job-name: minio-connection-test
        controller-uid: f44c1c03-d7d0-4070-b1ac-cbe1d5df7cfb
        job-name: minio-connection-test
    name: minio-connection-test-zplrr
    namespace: build-pipeline
    ownerReferences:
        - apiVersion: batch/v1
          blockOwnerDeletion: true
          controller: true
          kind: Job
          name: minio-connection-test
          uid: f44c1c03-d7d0-4070-b1ac-cbe1d5df7cfb
spec:
    containers:
        - args:
            - |
              echo "=== MinIO Connection Test ==="

              # Configure MinIO client
              mc alias set minio http://host.docker.internal:9000 admin kaizen123

              # Test connection
              mc admin info minio

              # Create bucket if not exists
              mc mb minio/build-logs --ignore-existing

              # Create test file
              echo "Test log content $(date)" > /tmp/test.log

              # Upload test file
              mc cp /tmp/test.log minio/build-logs/test.log

              # List bucket contents
              mc ls minio/build-logs/

              echo "=== MinIO Connection Test Completed ==="
          command:
            - sh
            - -c
          env:
            - name: MC_HOST_minio
              value: http://admin:kaizen123@host.docker.internal:9000
          image: minio/mc:latest
          imagePullPolicy: Always
          name: minio-test
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-wswx4
              readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
    volumes:
        - name: kube-api-access-wswx4
          projected:
            defaultMode: 420
            sources:
                - serviceAccountToken:
                    expirationSeconds: 3607
                    path: token
                - configMap:
                    items:
                        - key: ca.crt
                          path: ca.crt
                    name: kube-root-ca.crt
                - downwardAPI:
                    items:
                        - fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                          path: namespace
