apiVersion: apps/v1
kind: ReplicaSet
metadata:
    annotations:
        deployment.kubernetes.io/desired-replicas: "2"
        deployment.kubernetes.io/max-replicas: "3"
    labels:
        app: frontend-service
        pod-template-hash: 76748564c
        version: 1.0.0
    name: frontend-service-76748564c
    namespace: build-pipeline
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: frontend-service
          uid: 17e30c26-6be4-4008-aec2-4b13d2286a2f
spec:
    replicas: 0
    selector:
        matchLabels:
            app: frontend-service
            pod-template-hash: 76748564c
    template:
        metadata:
            annotations:
                kubectl.kubernetes.io/restartedAt: "2025-07-08T18:55:07+03:00"
            creationTimestamp: null
            labels:
                app: frontend-service
                pod-template-hash: 76748564c
                version: 1.0.0
        spec:
            containers:
                - env:
                    - name: REACT_APP_API_URL
                      value: http://build-management-service.build-pipeline:80/api/v1
                    - name: REACT_APP_WS_HOST
                      value: build-management-service.build-pipeline
                    - name: REACT_APP_WS_PORT
                      value: "8080"
                  image: localhost/frontend-service:latest
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /health
                        port: 3000
                        scheme: HTTP
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 5
                  name: frontend-service
                  ports:
                    - containerPort: 3000
                      name: http
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /health
                        port: 3000
                        scheme: HTTP
                    initialDelaySeconds: 5
                    periodSeconds: 5
                    successThreshold: 1
                    timeoutSeconds: 3
                  resources:
                    limits:
                        cpu: 200m
                        memory: 256Mi
                    requests:
                        cpu: 50m
                        memory: 64Mi
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
