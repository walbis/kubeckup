apiVersion: apps/v1
kind: Deployment
metadata:
    annotations: {}
    labels:
        app: frontend-service
        version: 1.0.0
    name: frontend-service
    namespace: build-pipeline
spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app: frontend-service
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            annotations:
                kubectl.kubernetes.io/restartedAt: "2025-07-08T18:55:07+03:00"
            creationTimestamp: null
            labels:
                app: frontend-service
                version: 1.0.0
        spec:
            containers:
                - env:
                    - name: REACT_APP_API_URL
                      value: http://build-management-service.build-pipeline:80/api/v1
                    - name: REACT_APP_WS_HOST
                      value: build-management-service.build-pipeline
                    - name: REACT_APP_WS_PORT
                      value: "8080"
                  image: frontend-static:v2
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /health
                        port: 3000
                        scheme: HTTP
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 5
                  name: frontend-service
                  ports:
                    - containerPort: 3000
                      name: http
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /health
                        port: 3000
                        scheme: HTTP
                    initialDelaySeconds: 5
                    periodSeconds: 5
                    successThreshold: 1
                    timeoutSeconds: 3
                  resources:
                    limits:
                        cpu: 200m
                        memory: 256Mi
                    requests:
                        cpu: 50m
                        memory: 64Mi
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
