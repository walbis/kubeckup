apiVersion: apps/v1
kind: ReplicaSet
metadata:
    annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
    labels:
        app: controller-manager
        pod-template-hash: 574bd84977
    name: controller-manager-574bd84977
    namespace: argo-events
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: controller-manager
          uid: bfb53e2f-ca53-4477-9beb-5b66d1ee8e2e
spec:
    replicas: 1
    selector:
        matchLabels:
            app: controller-manager
            pod-template-hash: 574bd84977
    template:
        metadata:
            creationTimestamp: null
            labels:
                app: controller-manager
                pod-template-hash: 574bd84977
        spec:
            containers:
                - args:
                    - controller
                  env:
                    - name: ARGO_EVENTS_IMAGE
                      value: quay.io/argoproj/argo-events:v1.9.6
                    - name: NAMESPACE
                      valueFrom:
                        fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                  image: quay.io/argoproj/argo-events:v1.9.6
                  imagePullPolicy: Always
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /healthz
                        port: 8081
                        scheme: HTTP
                    initialDelaySeconds: 3
                    periodSeconds: 3
                    successThreshold: 1
                    timeoutSeconds: 1
                  name: controller-manager
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /readyz
                        port: 8081
                        scheme: HTTP
                    initialDelaySeconds: 3
                    periodSeconds: 3
                    successThreshold: 1
                    timeoutSeconds: 1
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /etc/argo-events
                      name: controller-config-volume
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext:
                runAsNonRoot: true
                runAsUser: 9731
            serviceAccount: argo-events-sa
            serviceAccountName: argo-events-sa
            terminationGracePeriodSeconds: 30
            volumes:
                - configMap:
                    defaultMode: 420
                    name: argo-events-controller-config
                  name: controller-config-volume
