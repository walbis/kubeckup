apiVersion: apps/v1
kind: ReplicaSet
metadata:
    annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        meta.helm.sh/release-name: harbor
        meta.helm.sh/release-namespace: harbor
    labels:
        app: harbor
        app.kubernetes.io/component: portal
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        chart: harbor
        component: portal
        heritage: Helm
        pod-template-hash: 5d56b5c798
        release: harbor
    name: harbor-portal-5d56b5c798
    namespace: harbor
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: harbor-portal
          uid: 70e1d9b4-1ccc-415c-8696-3ce01b056f73
spec:
    replicas: 1
    selector:
        matchLabels:
            app: harbor
            component: portal
            pod-template-hash: 5d56b5c798
            release: harbor
    template:
        metadata:
            annotations:
                checksum/configmap: d3042f1e3001069b3dd069e1ba9c354e48460f998a7732c2e4a53f87e0c732f6
            creationTimestamp: null
            labels:
                app: harbor
                app.kubernetes.io/component: portal
                app.kubernetes.io/instance: harbor
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: harbor
                app.kubernetes.io/part-of: harbor
                app.kubernetes.io/version: 2.13.1
                chart: harbor
                component: portal
                heritage: Helm
                pod-template-hash: 5d56b5c798
                release: harbor
        spec:
            automountServiceAccountToken: false
            containers:
                - image: goharbor/harbor-portal:v2.13.1
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 300
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  name: portal
                  ports:
                    - containerPort: 8080
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  resources: {}
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    privileged: false
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /etc/nginx/nginx.conf
                      name: portal-config
                      subPath: nginx.conf
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext:
                fsGroup: 10000
                runAsUser: 10000
            terminationGracePeriodSeconds: 30
            volumes:
                - configMap:
                    defaultMode: 420
                    name: harbor-portal
                  name: portal-config
