apiVersion: apps/v1
kind: ReplicaSet
metadata:
    annotations:
        deployment.kubernetes.io/desired-replicas: "1"
        deployment.kubernetes.io/max-replicas: "2"
        meta.helm.sh/release-name: harbor
        meta.helm.sh/release-namespace: harbor
    labels:
        app: harbor
        app.kubernetes.io/component: nginx
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        chart: harbor
        component: nginx
        heritage: Helm
        pod-template-hash: fdc64689b
        release: harbor
    name: harbor-nginx-fdc64689b
    namespace: harbor
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: Deployment
          name: harbor-nginx
          uid: fe5173cf-5f74-49b6-9338-254e22772125
spec:
    replicas: 1
    selector:
        matchLabels:
            app: harbor
            component: nginx
            pod-template-hash: fdc64689b
            release: harbor
    template:
        metadata:
            annotations:
                checksum/configmap: b780132c8b8dd012e71b05bb17478ef2a053400929891993a47f7261d21c5f33
            creationTimestamp: null
            labels:
                app: harbor
                app.kubernetes.io/component: nginx
                app.kubernetes.io/instance: harbor
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: harbor
                app.kubernetes.io/part-of: harbor
                app.kubernetes.io/version: 2.13.1
                chart: harbor
                component: nginx
                heritage: Helm
                pod-template-hash: fdc64689b
                release: harbor
        spec:
            automountServiceAccountToken: false
            containers:
                - image: goharbor/nginx-photon:v2.13.1
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 300
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  name: nginx
                  ports:
                    - containerPort: 8080
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  resources: {}
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    privileged: false
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /etc/nginx/nginx.conf
                      name: config
                      subPath: nginx.conf
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext:
                fsGroup: 10000
                runAsUser: 10000
            terminationGracePeriodSeconds: 30
            volumes:
                - configMap:
                    defaultMode: 420
                    name: harbor-nginx
                  name: config
