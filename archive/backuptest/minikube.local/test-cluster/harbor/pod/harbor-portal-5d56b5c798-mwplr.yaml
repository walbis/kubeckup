apiVersion: v1
kind: Pod
metadata:
    annotations:
        checksum/configmap: d3042f1e3001069b3dd069e1ba9c354e48460f998a7732c2e4a53f87e0c732f6
    generateName: harbor-portal-5d56b5c798-
    labels:
        app: harbor
        app.kubernetes.io/component: portal
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        chart: harbor
        component: portal
        heritage: Helm
        pod-template-hash: 5d56b5c798
        release: harbor
    name: harbor-portal-5d56b5c798-mwplr
    namespace: harbor
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: harbor-portal-5d56b5c798
          uid: 9f36e02e-41cb-4e31-9ebd-1fc0691376e4
spec:
    automountServiceAccountToken: false
    containers:
        - image: goharbor/harbor-portal:v2.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
                path: /
                port: 8080
                scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: portal
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
                path: /
                port: 8080
                scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
                type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: portal-config
              subPath: nginx.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
        fsGroup: 10000
        runAsUser: 10000
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
    volumes:
        - configMap:
            defaultMode: 420
            name: harbor-portal
          name: portal-config
