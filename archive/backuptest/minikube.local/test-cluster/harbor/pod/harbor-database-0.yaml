apiVersion: v1
kind: Pod
metadata:
    annotations:
        checksum/secret: 67bde9e5c559c1ce93596fcc34babc5cfeffe31505eb121fa321f058552b7e03
    generateName: harbor-database-
    labels:
        app: harbor
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        apps.kubernetes.io/pod-index: "0"
        chart: harbor
        component: database
        controller-revision-hash: harbor-database-6c98bcccbb
        heritage: Helm
        release: harbor
        statefulset.kubernetes.io/pod-name: harbor-database-0
    name: harbor-database-0
    namespace: harbor
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: StatefulSet
          name: harbor-database
          uid: 957b7ccb-53f9-4d7a-b26c-5958b7afe768
spec:
    automountServiceAccountToken: false
    containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: harbor-database
          image: goharbor/harbor-db:v2.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
                command:
                    - /docker-healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: database
          readinessProbe:
            exec:
                command:
                    - /docker-healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
                type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
            - mountPath: /dev/shm
              name: shm-volume
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: harbor-database-0
    initContainers:
        - args:
            - -c
            - chmod -R 700 /var/lib/postgresql/data/pgdata || true
          command:
            - /bin/sh
          image: goharbor/harbor-db:v2.13.1
          imagePullPolicy: IfNotPresent
          name: data-permissions-ensurer
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
                type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
        fsGroup: 999
        runAsUser: 999
    serviceAccount: default
    serviceAccountName: default
    subdomain: harbor-database
    terminationGracePeriodSeconds: 120
    tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
    volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 512Mi
          name: shm-volume
        - emptyDir: {}
          name: database-data
