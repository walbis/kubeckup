apiVersion: v1
kind: Pod
metadata:
    annotations:
        checksum/configmap: 6c67097d7875dc369bdb547ce9833e1161d6ec547895f8fe045d98fdeeb4638a
        checksum/secret: 1595f0fe2ef8da42c526d105ff40818768c54e69978bcee8331858a7c048927b
        checksum/secret-core: 7c230d7e580683f68e00f47a7f1288c6dc9b50a5fe59d0675fecc23dbf896cb0
        checksum/secret-jobservice: e6060fcd188c588713cf1e2849d4d8bbeb7fceaeaa84d703deec77a9c873d8fd
    generateName: harbor-registry-696bb87f57-
    labels:
        app: harbor
        app.kubernetes.io/component: registry
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        chart: harbor
        component: registry
        heritage: Helm
        pod-template-hash: 696bb87f57
        release: harbor
    name: harbor-registry-696bb87f57-jbzqv
    namespace: harbor
    ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: harbor-registry-696bb87f57
          uid: 39949e7a-1cd0-4e72-90a9-84d8aa8ab8ed
spec:
    automountServiceAccountToken: false
    containers:
        - envFrom:
            - secretRef:
                name: harbor-registry
          image: goharbor/registry-photon:v2.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
                path: /
                port: 5000
                scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: registry
          ports:
            - containerPort: 5000
              protocol: TCP
            - containerPort: 5001
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
                path: /
                port: 5000
                scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
                type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: registry-data
            - mountPath: /etc/registry/passwd
              name: registry-htpasswd
              subPath: passwd
            - mountPath: /etc/registry/config.yml
              name: registry-config
              subPath: config.yml
        - env:
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                    key: secret
                    name: harbor-core
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                    key: JOBSERVICE_SECRET
                    name: harbor-jobservice
          envFrom:
            - configMapRef:
                name: harbor-registryctl
            - secretRef:
                name: harbor-registry
            - secretRef:
                name: harbor-registryctl
          image: goharbor/harbor-registryctl:v2.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
                path: /api/health
                port: 8080
                scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: registryctl
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
                path: /api/health
                port: 8080
                scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                    - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
                type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: registry-data
            - mountPath: /etc/registry/config.yml
              name: registry-config
              subPath: config.yml
            - mountPath: /etc/registryctl/config.yml
              name: registry-config
              subPath: ctl-config.yml
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
        fsGroup: 10000
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 10000
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 120
    tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
    volumes:
        - name: registry-htpasswd
          secret:
            defaultMode: 420
            items:
                - key: REGISTRY_HTPASSWD
                  path: passwd
            secretName: harbor-registry-htpasswd
        - configMap:
            defaultMode: 420
            name: harbor-registry
          name: registry-config
        - emptyDir: {}
          name: registry-data
