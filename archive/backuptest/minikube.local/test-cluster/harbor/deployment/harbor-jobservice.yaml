apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        meta.helm.sh/release-name: harbor
        meta.helm.sh/release-namespace: harbor
    labels:
        app: harbor
        app.kubernetes.io/component: jobservice
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.13.1
        chart: harbor
        component: jobservice
        heritage: Helm
        release: harbor
    name: harbor-jobservice
    namespace: harbor
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app: harbor
            component: jobservice
            release: harbor
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            annotations:
                checksum/configmap: 806ec9169562a1fb5018361b689f8498c16ea804411b10d74cb9c049e1e028c9
                checksum/configmap-env: 22a859dd24a3365ff73936d254f80f36b9a5343d3114e47b7661b22518afbc8c
                checksum/secret: 53f9ba85cd19a25f64ba6e9bef7f42b23756783969e6579ed5fb04d62526e6d2
                checksum/secret-core: 23fdfcdf09ad4aafeab5b89c0370df267d90f1e592888a9b0532eea30326fe8a
            creationTimestamp: null
            labels:
                app: harbor
                app.kubernetes.io/component: jobservice
                app.kubernetes.io/instance: harbor
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: harbor
                app.kubernetes.io/part-of: harbor
                app.kubernetes.io/version: 2.13.1
                chart: harbor
                component: jobservice
                heritage: Helm
                release: harbor
        spec:
            automountServiceAccountToken: false
            containers:
                - env:
                    - name: CORE_SECRET
                      valueFrom:
                        secretKeyRef:
                            key: secret
                            name: harbor-core
                  envFrom:
                    - configMapRef:
                        name: harbor-jobservice-env
                    - secretRef:
                        name: harbor-jobservice
                  image: goharbor/harbor-jobservice:v2.13.1
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /api/v1/stats
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 300
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  name: jobservice
                  ports:
                    - containerPort: 8080
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /api/v1/stats
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 20
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  resources: {}
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    privileged: false
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /etc/jobservice/config.yml
                      name: jobservice-config
                      subPath: config.yml
                    - mountPath: /var/log/jobs
                      name: job-logs
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext:
                fsGroup: 10000
                runAsUser: 10000
            terminationGracePeriodSeconds: 120
            volumes:
                - configMap:
                    defaultMode: 420
                    name: harbor-jobservice
                  name: jobservice-config
                - emptyDir: {}
                  name: job-logs
