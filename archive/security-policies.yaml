---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cluster-backup-network-policy
  namespace: openshift-backup
  labels:
    app: cluster-backup
    component: security
spec:
  podSelector:
    matchLabels:
      app: cluster-backup
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    ports:
    - protocol: TCP
      port: 8080  # Metrics port
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow Kubernetes API access
  - to:
    - namespaceSelector:
        matchLabels:
          name: default
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  # Allow MinIO access (adjust IP range as needed)
  - to: []
    ports:
    - protocol: TCP
      port: 9000
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: git-sync-network-policy
  namespace: openshift-backup
  labels:
    app: git-sync
    component: security
spec:
  podSelector:
    matchLabels:
      app: git-sync
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-monitoring
    ports:
    - protocol: TCP
      port: 8080  # Metrics port
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow Git repository access (GitHub/GitLab)
  - to: []
    ports:
    - protocol: TCP
      port: 22   # SSH
    - protocol: TCP
      port: 443  # HTTPS
  # Allow MinIO access
  - to: []
    ports:
    - protocol: TCP
      port: 9000
    - protocol: TCP
      port: 443
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: cluster-backup-scc
  labels:
    app: cluster-backup
    component: security
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: false
allowPrivilegedContainer: false
allowedCapabilities: null
defaultAddCapabilities: null
fsGroup:
  type: MustRunAs
  ranges:
  - min: 1001
    max: 1001
readOnlyRootFilesystem: true
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAs
  uid: 1001
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: MustRunAs
  ranges:
  - min: 1001
    max: 1001
users:
- system:serviceaccount:openshift-backup:cluster-backup
- system:serviceaccount:openshift-backup:git-sync
volumes:
- configMap
- emptyDir
- projected
- secret
---
apiVersion: v1
kind: LimitRange
metadata:
  name: backup-limits
  namespace: openshift-backup
  labels:
    app: cluster-backup
    component: security
spec:
  limits:
  - default:
      cpu: "1"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
    type: Container
  - default:
      storage: "10Gi"
    max:
      storage: "50Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: backup-quota
  namespace: openshift-backup
  labels:
    app: cluster-backup
    component: security
spec:
  hard:
    requests.cpu: "2"
    requests.memory: "4Gi"
    limits.cpu: "4"
    limits.memory: "8Gi"
    pods: "10"
    persistentvolumeclaims: "5"
    services: "5"
    secrets: "10"
    configmaps: "10"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cluster-backup-pdb
  namespace: openshift-backup
  labels:
    app: cluster-backup
    component: security
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app: cluster-backup
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: git-sync-pdb
  namespace: openshift-backup
  labels:
    app: git-sync
    component: security
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app: git-sync