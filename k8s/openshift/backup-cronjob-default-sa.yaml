---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cluster-backup-default-sa
  namespace: backup-system
  labels:
    app: cluster-backup
    component: backup-cronjob
    platform: openshift
  annotations:
    description: "OpenShift cluster backup job using default ServiceAccount"
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      backoffLimit: 3
      activeDeadlineSeconds: 7200  # 2 hours timeout
      template:
        metadata:
          labels:
            app: cluster-backup
            component: backup-job
            platform: openshift
          annotations:
            openshift.io/scc: restricted-v2
        spec:
          serviceAccountName: cluster-backup
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            # OpenShift assigns UID automatically, no need to specify
            # runAsUser will be assigned by OpenShift SCC
            fsGroup: 1001
            seccompProfile:
              type: RuntimeDefault
          containers:
          - name: backup
            image: registry.example.com/openshift/cluster-backup:latest
            imagePullPolicy: Always
            env:
            # All configuration comes from backup-secrets
            - name: CLUSTER_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: cluster-domain
            - name: CLUSTER_NAME
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: cluster-name
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-endpoint
            - name: MINIO_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-bucket
            - name: MINIO_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-use-ssl
            - name: EXCLUDE_NAMESPACES
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: exclude-namespaces
            - name: BATCH_SIZE
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: batch-size
            - name: RETRY_ATTEMPTS
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: retry-attempts
            - name: RETRY_DELAY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: retry-delay
            - name: LOG_LEVEL
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: log-level
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-secret-key
            # Cleanup configuration
            - name: ENABLE_CLEANUP
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: enable-cleanup
                  optional: true
            - name: RETENTION_DAYS
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: retention-days
                  optional: true
            - name: CLEANUP_ON_STARTUP
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: cleanup-on-startup
                  optional: true
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              capabilities:
                drop:
                - ALL
              # OpenShift SCC will handle these automatically
              # No need to specify runAsUser in container context
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: workspace
              mountPath: /workspace
            ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            livenessProbe:
              httpGet:
                path: /metrics
                port: metrics
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /metrics
                port: metrics
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 5
              failureThreshold: 3
          volumes:
          - name: tmp
            emptyDir: {}
          - name: workspace
            emptyDir: {}
          # OpenShift compatible tolerations
          tolerations:
          - operator: Exists
            effect: NoSchedule
          - operator: Exists
            effect: NoExecute
          nodeSelector:
            kubernetes.io/os: linux
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/worker
                    operator: Exists
              - weight: 50
                preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists