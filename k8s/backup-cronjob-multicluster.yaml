---
# Multi-Cluster Backup CronJob
# Deploy this on EVERY cluster you want to backup
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cluster-backup
  namespace: backup-system
  labels:
    app: cluster-backup
    component: multi-cluster-backup
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  timeZone: "UTC"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 3600  # 1 hour timeout
      template:
        metadata:
          labels:
            app: cluster-backup
            component: multi-cluster-backup
        spec:
          serviceAccountName: cluster-backup
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            fsGroup: 1001
          containers:
          - name: cluster-backup
            image: cluster-backup:latest
            imagePullPolicy: Always
            env:
            # Cluster identification - CUSTOMIZE FOR EACH CLUSTER
            - name: CLUSTER_NAME
              value: "production-cluster"  # CHANGE THIS FOR EACH CLUSTER
            - name: CLUSTER_DOMAIN
              value: "company.local"
            
            # MinIO Configuration (same for all clusters)
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-endpoint
            - name: MINIO_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-bucket
            - name: MINIO_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-use-ssl
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: minio-secret-key
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: workspace
              mountPath: /workspace
          volumes:
          - name: tmp
            emptyDir: {}
          - name: workspace
            emptyDir: {}
---
# Example configuration for different clusters:
# 
# Cluster 1 (Production):
# CLUSTER_NAME: "production-cluster"
# CLUSTER_DOMAIN: "company.local"
#
# Cluster 2 (Staging):  
# CLUSTER_NAME: "staging-cluster"
# CLUSTER_DOMAIN: "company.local"
#
# Cluster 3 (Development):
# CLUSTER_NAME: "dev-cluster"  
# CLUSTER_DOMAIN: "company.local"
#
# Result in MinIO:
# clusterbackup/
# ├── production-cluster/
# │   ├── namespace1/
# │   └── namespace2/
# ├── staging-cluster/
# │   ├── namespace1/
# │   └── namespace2/
# └── dev-cluster/
#     ├── namespace1/
#     └── namespace2/